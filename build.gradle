buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:1.2.3'
	}
}

apply plugin: 'android'

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
}

def isReleaseBuild = {
	return System.env.TRAVIS == 'true' &&
			System.env.TRAVIS_BRANCH == 'master'
}
def getVersionCode = {
	// 1069 was the last version code before moving builds to travis
	final int BASE_VERSION_CODE = 1069
	if(isReleaseBuild()) {
		return BASE_VERSION_CODE +
				Integer.parseInt(System.env.TRAVIS_BUILD_NUMBER)
	}
	return BASE_VERSION_CODE
}
def getVersionName = {
	// 1.4.5 is a historic version name which we wish to keep
	def versionName = "1.4.5.${getVersionCode()}"
	if(isReleaseBuild()) {
		// It's a release build!
		return versionName
	}
	// Anything built outside of CI is not a proper release
	return "${versionName}-SNAPSHOT"
}

android {
	defaultConfig {
		versionCode getVersionCode()
		versionName getVersionName()
		archivesBaseName = "medic-collect-" + versionName
	}
	productFlavors {
		base {
			// we will not create project-specific src directories
			// for `base` - it will use the defaults in
			// src/main
		}
		demo {
			versionName = android.defaultConfig.versionName + "-demo"
		}
		intrahealthsenegal {
			versionName = android.defaultConfig.versionName + "-seda"
		}
	}
	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']
			resources.srcDirs = ['src']
			res.srcDirs = ['res']
			assets.srcDirs = ['assets']
		}
		demo.setRoot('../medic-projects/_medic-collect-flavors/demo')
		intrahealthsenegal.setRoot('../medic-projects/_medic-collect-flavors/intrahealthsenegal')
	}
	compileSdkVersion 22
	buildToolsVersion '22.0.1'
	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/NOTICE.txt'
		exclude 'META-INF/DEPENDENCIES'
	}

	lintOptions {
		abortOnError false
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFile getDefaultProguardFile('proguard-android.txt')
			signingConfig signingConfigs.debug
		}
	}
}
